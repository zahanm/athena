
DEFINE COMMUNITY athena {
  goal
  learnables
  teachables
  student
  teacher
}

# FIXME temporary, till people and communities are implemented
DEFINE athena_member {
  name
  email
  goal
  learnable
  teachable
  student
  teacher
}

# Signup process
# --------------

DEFINE state_skill_needed FOR person DO
  PERFORM "What is the skill needed to perform that task?"
  RETURN skill
END

DEFINE state_teachable FOR person DO
  PERFORM "Tell me what you'd be interested in teaching."
  RETURN teachable
END

DEFINE identify_yourself FOR person DO
  PERFORM "Tell me your name and contact info."
  RETURN name, email
END

DEFINE goal { value }

LISTEN TO public VIA http FOR goals

ON EACH goal DO
  learner = athena_member { }
  learner.goal = goal['value']
  response = ASK public VIA stream TO state_skill_needed
  learner.learnable = response['skill']
  response = ASK public VIA stream TO state_teachable
  learner.teachable = response['teachable']
  identity = ASK public VIA stream TO identify_yourself
  INSPECT identity
  learner.name = identity['name']
  learner.email = identity['email']
  COMPUTE print_details ON learner
  # COMPUTE people.save ON learner
  NOTIFY public VIA stream OF learner
END

# external functions
# ------------------

DEFINE rank_k_teachers FOR shell ON me, teachers USING k = 5 DO
  PERFORM "python ranking.py"
  RETURN teachers_list
END

# helper functions
# ----------------

DEFINE print_details ON member DO
  PRINT 'Member:'
  PRINT 'name: ' + member.name
  PRINT 'email: ' + member.email
  PRINT 'goal: ' + member.goal
  PRINT 'learnable: ' + member.learnable
  PRINT 'teachable: ' + member.teachable
END
